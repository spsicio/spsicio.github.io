<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://spsicio.github.io</id>
    <title>SP-51 C-10</title>
    <updated>2021-11-21T15:29:38.892Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://spsicio.github.io"/>
    <link rel="self" href="https://spsicio.github.io/atom.xml"/>
    <subtitle>SP-51 C-10: AC Automaton Action</subtitle>
    <logo>https://spsicio.github.io/images/avatar.png</logo>
    <icon>https://spsicio.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, SP-51 C-10</rights>
    <entry>
        <title type="html"><![CDATA[[ICPC 2021] 補完計劃・濟南]]></title>
        <id>https://spsicio.github.io/post/ICPC-2021-Jinan/</id>
        <link href="https://spsicio.github.io/post/ICPC-2021-Jinan/">
        </link>
        <updated>2021-11-14T15:59:59.000Z</updated>
        <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">Problem</th>
<th style="text-align:center">Status</th>
<th style="text-align:center">Tags</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><a href="#A">A - Space Station</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="#B">B - Monitored Area</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="#C">C - Optimal Strategy</a></td>
<td style="text-align:center">🎈</td>
<td style="text-align:center">组合</td>
</tr>
<tr>
<td style="text-align:center"><a href="#D">D - Arithmetic Sequence</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center">三分</td>
</tr>
<tr>
<td style="text-align:center"><a href="#E">E - Insidemen</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="#F">F - Neural Network Counting</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="#G">G - Happy Alice</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="#H">H - Game Coin</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="#I">I - Permutation Pair</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="#J">J - Determinant</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center">膜法</td>
</tr>
<tr>
<td style="text-align:center"><a href="#K">K - Search for Mafuyu</a></td>
<td style="text-align:center">🎈</td>
<td style="text-align:center">树</td>
</tr>
<tr>
<td style="text-align:center"><a href="#L">L - Strange Series</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="#M">M - Coloring Rectangles</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center">2-SAT</td>
</tr>
</tbody>
</table>
<hr>
<h1 id="div-id-aa-space-stationdiv"><div id = "A">A - Space Station<div></h1>
<hr>
<h1 id="div-id-bb-monitored-areadiv"><div id = "B">B - Monitored Area<div></h1>
<hr>
<h1 id="div-id-cc-optimal-strategydiv"><div id = "C">C - Optimal Strategy<div></h1>
<h2 id="solution">Solution</h2>
<p>最大值的个数为奇数时先手必定选取，转换为偶数的情况。<br>
当任意一个人选取时，另一个人必定跟随选取。</p>
<p>考虑讲元素按从小到大添加计算。当前为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 个元素的方案数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span>，加入 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> 个相同的更大的元素：新的方案数为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>f</mi><mo>×</mo><mi>c</mi><mo>!</mo><mo>×</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mrow><mi>n</mi><mo>+</mo><mo>⌊</mo><mi>c</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo>⌋</mo></mrow><mi>n</mi></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">f&#x27; = f \times c! \times  \binom{n + \lfloor c/2 \rfloor}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">c</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3190099999999998em;vertical-align:-0.35001em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9689999999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mopen mtight">⌊</span><span class="mord mathdefault mtight">c</span><span class="mord mtight">/</span><span class="mord mtight">2</span><span class="mclose mtight">⌋</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span> 。</p>
<h2 id="code">Code</h2>
<hr>
<h1 id="div-id-dd-arithmetic-sequencediv"><div id = "D">D - Arithmetic Sequence<div></h1>
<h2 id="solution-2">Solution</h2>
<p>假设等差数列为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">ki + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>，那么答案为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><mi>k</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">a_i - ki</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">i</span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 的距离和。<br>
记 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>k</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span> 为固定 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 可变时取得的最小值。（可以 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> 计算。）</p>
<p>可以发现 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>lim</mi><mo>⁡</mo><mrow><mi>k</mi><mo>→</mo><mo>±</mo><mi mathvariant="normal">∞</mi></mrow></msub><mi>f</mi><mo>(</mo><mi>k</mi><mo>)</mo><mo>→</mo><mo>+</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\lim \limits _{k \to \pm \infty} f(k) \to + \infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.560439em;vertical-align:-0.8104389999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.047892em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">→</span><span class="mord mtight">±</span><span class="mord mtight">∞</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8104389999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord">∞</span></span></span></span>，猜测 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span> 为上凹函数。<br>
考虑证明 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>f</mi><mo>(</mo><mi>k</mi><mo>)</mo><mo>≤</mo><mi>f</mi><mo>(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>+</mo><mi>f</mi><mo>(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">2f(k) \leq f(k - 1) + f(k + 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>f</mi><mo>(</mo><mi>k</mi><mo>)</mo><mo>=</mo><mo>∑</mo><mrow><mo fence="true">∣</mo><mn>2</mn><msub><mi>t</mi><mi>i</mi></msub><mo>−</mo><mn>2</mn><msub><mi>b</mi><mn>0</mn></msub><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">2f(k) = \sum \left | 2t_i - 2b_0 \right |</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span><br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>=</mo><mo>∑</mo><mrow><mo fence="true">∣</mo><msub><mi>t</mi><mi>i</mi></msub><mo>+</mo><mi>i</mi><mo>−</mo><msub><mi>b</mi><mn>1</mn></msub><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">f(k - 1) = \sum \left | t_i + i - b_1 \right |</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span><br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo>)</mo><mo>=</mo><mo>∑</mo><mrow><mo fence="true">∣</mo><msub><mi>t</mi><mi>i</mi></msub><mo>−</mo><mi>i</mi><mo>−</mo><msub><mi>b</mi><mn>2</mn></msub><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">f(k + 1) = \sum \left | t_i - i - b_2 \right|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span><br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>+</mo><mi>f</mi><mo>(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo>)</mo><mo>≥</mo><mo>∑</mo><mrow><mo fence="true">∣</mo><mn>2</mn><msub><mi>t</mi><mi>i</mi></msub><mo>−</mo><msub><mi>b</mi><mn>1</mn></msub><mo>−</mo><msub><mi>b</mi><mn>2</mn></msub><mo fence="true">∣</mo></mrow><mo>≥</mo><mn>2</mn><mi>f</mi><mo>(</mo><mi>k</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(k - 1) + f(k + 1) \geq \sum \left | 2t_i - b_1 - b_2 \right | \geq 2f(k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span></p>
<p>因此可以用三分解决问题，总时间复杂度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>w</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(nlogw)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span> 。</p>
<h2 id="code-2">Code</h2>
<hr>
<h1 id="div-id-ee-insidemendiv"><div id = "E">E -Insidemen<div></h1>
<hr>
<h1 id="div-id-ff-neural-network-countingdiv"><div id = "F">F - Neural Network Counting<div></h1>
<hr>
<h1 id="div-id-gg-happy-alicediv"><div id = "G">G - Happy Alice<div></h1>
<hr>
<h1 id="div-id-hh-game-coindiv"><div id = "H">H - Game Coin<div></h1>
<hr>
<h1 id="div-id-ii-permutation-pairdiv"><div id = "I">I - Permutation Pair<div></h1>
<hr>
<h1 id="div-id-jj-determinantdiv"><div id = "J">J - Determinant<div></h1>
<h2 id="solution-3">Solution</h2>
<p>使用浮点数计算精度不够。使用整型复杂度额外带个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>log</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\log</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span></span></span></span> 且位数过多。</p>
<p>取模计算？🤔 怎么判断绝对值？</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>+</mo><mi>x</mi><mo>≡</mo><mo>−</mo><mi>x</mi><mspace></mspace><mspace width="0.4444444444444444em"/><mo>(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">+x \equiv -x \pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span> 当且仅当 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>p</mi><mo>∣</mo><mi>x</mi><mo>)</mo><mo>∨</mo><mo>(</mo><mi>p</mi><mo>=</mo><mn>2</mn><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(p \mid x) \lor (p = 2x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> 时成立。</p>
<p>于是我们只需要找一些特殊的模数稍加计算即可。</p>
<blockquote>
<p>特别的，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">odd</mi><mo>⁡</mo><mo>(</mo><mi>p</mi><mo>)</mo><mo>∧</mo><mo>(</mo><mi>p</mi><mo>∤</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">\operatorname{odd}(p) \land (p \nmid x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">o</span><span class="mord mathrm">d</span><span class="mord mathrm">d</span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00142em;vertical-align:-0.25142em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">∤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> 时，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>o</mi><mi>d</mi><mi>d</mi><mo>(</mo><mo>+</mo><mi>x</mi><mo>)</mo><mo>=</mo><mi>e</mi><mi>v</mi><mi>e</mi><mi>n</mi><mo>(</mo><mo>−</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">odd(+x) = even(-x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord">+</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> 。</p>
</blockquote>
<h2 id="code-3">Code</h2>
<hr>
<h1 id="div-id-ksearch-for-mafuyudiv"><div id = "K">Search for Mafuyu<div></h1>
<blockquote>
<p>花了很久的时间想最优的贪心策略，🤡 但是实际上任意顺序都是相同的。</p>
</blockquote>
<h2 id="solution-4">Solution</h2>
<p>比较明显遍历的顺序一定是个欧拉序。</p>
<p>遍历子树 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span> 并返回一共需要花费 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>s</mi><mi>i</mi><mi>z</mi><mo>(</mo><mi>v</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">2siz(v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 步（每条边走两次）。<br>
于是可以知道交换子树的遍历顺序，答案不变。</p>
<p>也就是说按任意顺序 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">dfs</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\operatorname{dfs}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mop"><span class="mord mathrm">d</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mathrm">s</span></span></span></span></span> 并计算就可以得到答案。</p>
<h2 id="code-4">Code</h2>
<hr>
<h1 id="div-id-ll-strange-seriesdiv"><div id = "L">L - Strange Series<div></h1>
<hr>
<h1 id="div-id-mm-coloring-rectanglesdiv"><div id = "M">M - Coloring Rectangles<div></h1>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[CCPC 2021] 補完計劃・桂林]]></title>
        <id>https://spsicio.github.io/post/CCPC-2021-Guilin/</id>
        <link href="https://spsicio.github.io/post/CCPC-2021-Guilin/">
        </link>
        <updated>2021-11-07T15:59:59.000Z</updated>
        <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">Problem</th>
<th style="text-align:center">Status</th>
<th style="text-align:center">Tags</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><a href="#A">A - A Hero Named Magnus</a></td>
<td style="text-align:center">🎈</td>
<td style="text-align:center">💧</td>
</tr>
<tr>
<td style="text-align:center"><a href="#B">B - A Plus B Problem</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center">平衡树</td>
</tr>
<tr>
<td style="text-align:center"><a href="#C">C - AC Automaton</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="#D">D - Assume is All You Need</a></td>
<td style="text-align:center">🎈</td>
<td style="text-align:center">构造</td>
</tr>
<tr>
<td style="text-align:center"><a href="#E">E - Buy and Delete</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center">最短路 | 最小环</td>
</tr>
<tr>
<td style="text-align:center"><a href="#F">F - Illuminations 2</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="#G">G - Occupy the Cities</a></td>
<td style="text-align:center">🎈</td>
<td style="text-align:center">模拟</td>
</tr>
<tr>
<td style="text-align:center"><a href="#H">H - Popcount Words</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="#I">I - PTSD</a></td>
<td style="text-align:center">🎈</td>
<td style="text-align:center">贪心</td>
</tr>
<tr>
<td style="text-align:center"><a href="#J">J - Suffix Automaton</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="#K">K - Tax</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center">搜索</td>
</tr>
<tr>
<td style="text-align:center"><a href="#L">L - Wiring Engineering</a></td>
<td style="text-align:center">💀</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<hr>
<h1 id="div-id-aa-a-hero-named-magnusdiv"><div id = "A">A - A Hero Named Magnus<div></h1>
<ul>
<li>简单签到，答案为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>x</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2 x - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 。</li>
</ul>
<hr>
<h1 id="div-id-bb-a-plus-b-problemdiv"><div id = "B">B - A Plus B Problem<div></h1>
<h2 id="solution">Solution</h2>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub><mo>=</mo><mo>(</mo><msub><mi>A</mi><mi>i</mi></msub><mo>+</mo><msub><mi>B</mi><mi>i</mi></msub><mo>+</mo><mo>[</mo><msub><mi>A</mi><mi>j</mi></msub><mo>+</mo><msub><mi>B</mi><mi>j</mi></msub><mo>≥</mo><mn>10</mn><mo>]</mo><mtext> </mtext><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mn>10</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">C_i = ( A_i + B_i + [A_j + B_j \ge 10] \bmod 10 )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mclose">)</span></span></span></span>，<br>
其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span> 为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 往低第一个满足 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mi>j</mi></msub><mo>+</mo><msub><mi>B</mi><mi>j</mi></msub><mi mathvariant="normal">ne</mi><mo>⁡</mo><mn>9</mn></mrow><annotation encoding="application/x-tex">A_j + B_j \operatorname{ne} 9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">n</span><span class="mord mathrm">e</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">9</span></span></span></span> 的位。</p>
<p>如果 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 位是否进位的状态改变，那么往高到第一个满足 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mi>j</mi></msub><mo>+</mo><msub><mi>B</mi><mi>j</mi></msub><mi mathvariant="normal">ne</mi><mo>⁡</mo><mn>9</mn></mrow><annotation encoding="application/x-tex">A_j + B_j \operatorname{ne} 9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">n</span><span class="mord mathrm">e</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">9</span></span></span></span> 的位 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span> 都会改变。</p>
<p>那么我们只需要维护所有满足 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub><mo>+</mo><msub><mi>B</mi><mi>i</mi></msub><mi mathvariant="normal">ne</mi><mo>⁡</mo><mn>9</mn></mrow><annotation encoding="application/x-tex">A_i + B_i \operatorname{ne} 9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">n</span><span class="mord mathrm">e</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">9</span></span></span></span> 的位 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 就可很快解决问题。</p>
<blockquote>
<p>考场上计划维护实际结果中连续的 0 与 9 的区间，但是细节过多，写挂了。😰</p>
</blockquote>
<h2 id="code">Code</h2>
<pre><code class="language-c++">const int MAX_N = 1000005;

int a[2][MAX_N];
set&lt;int&gt; st;
int n, q;

void get_num(int *a) {
    static char s[MAX_N];
    scanf(&quot;%s&quot;, s + 1);
    for (int i = 1; i &lt;= n; ++i) a[i] = s[i] - '0';
}

int main() {

    scanf(&quot;%d%d&quot;, &amp;n, &amp;q);
    get_num(a[0]), get_num(a[1]);
    
    for (int i = 1; i &lt;= n; ++i)
        if (a[0][i] + a[1][i] != 9)
            st.insert(i);
    st.insert(0);
    st.insert(n + 1);
    
    for (int k, i, v, j, cnt; q; --q) {
    
        scanf(&quot;%d%d%d&quot;, &amp;k, &amp;i, &amp;v); --k;
    
        j = *st.upper_bound(i);
        bool low_carry = (j &lt;= n and a[0][j] + a[1][j] &gt;= 10);
        
        if (a[k][i] == v) cnt = 0; else {
            cnt = 2;
            bool old_carry = (a[0][i] + a[1][i] + low_carry &gt;= 10);
            bool new_carry = (a[k ^ 1][i] + v + low_carry &gt;= 10);
            if (old_carry != new_carry) {
                j = *--st.lower_bound(i);
                cnt += (j ? i - j : i - 1);
            }
            if (a[0][i] + a[1][i] == 9) st.insert(i);
            if (a[k ^ 1][i] + v == 9) st.erase(i);
            a[k][i] = v;
        }
    
        printf(&quot;%d %d\n&quot;, (a[0][i] + a[1][i] + low_carry) % 10, cnt);
    
    }
    
    return 0;

}
</code></pre>
<hr>
<h1 id="div-id-cc-ac-automatondiv"><div id = "C">C - AC Automaton<div></h1>
<hr>
<h1 id="div-id-dd-assume-is-all-you-needdiv"><div id = "D">D - Assume is All You Need<div></h1>
<h2 id="solution-2">Solution</h2>
<p>可以发现较大的元素位置越靠前是越有利于我们的行动的。在一个元素交换到目标位置的过程中，不断地将该元素和区间内最大的元素进行交换，可以保证较大的元素尽量靠前，不会损失解。</p>
<h2 id="code-2">Code</h2>
<pre><code class="language-c++">typedef pair&lt;int, int&gt; pii; 

const int MAX_N = 2025, MAX_K = 2041215;

int pos_a[MAX_N], pos_b[MAX_N];
int a[MAX_N], b[MAX_N];
pii ans[MAX_K];

int main() {
	int T, n;
	scanf(&quot;%d&quot;, &amp;T);
	while (T--) {
		
		scanf(&quot;%d&quot;, &amp;n);
		for (int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, a + i), pos_a[a[i]] = i;
		for (int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, b + i), pos_b[b[i]] = i;
		
		int cnt = 0; bool unsolvable = 0;
		
		for (int i = n; i; --i) {
			int &amp;st = pos_a[i], ed = pos_b[i];
			for (int j = i - 1; j; --j) {
				if (pos_a[j] &gt; st and pos_a[j] &lt;= ed) {
					ans[++cnt] = pii(st, pos_a[j]);
					swap(st, pos_a[j]);
				}
			}
			if (st != ed) { unsolvable = 1; break; }
		}
		
		if (unsolvable) puts(&quot;-1&quot;);
		else {
			printf(&quot;%d\n&quot;, cnt);
			for (int i = 1; i &lt;= cnt; ++i)
				printf(&quot;%d %d\n&quot;, ans[i].first, ans[i].second);
		}
	
	}
	return 0;
}
</code></pre>
<hr>
<h1 id="div-id-ee-buy-and-deletediv"><div id = "E">E - Buy and Delete<div></h1>
<blockquote>
<p>竟死于不知道 DAG 中的 A —— Acyclic 这个词。🐶 英语，早该学学了。</p>
</blockquote>
<h2 id="solution-3">Solution</h2>
<p>当边集为空时答案为 0，边集无环时答案为 1，边集有环时答案位 2 。</p>
<blockquote>
<p>理解一：第一遍删除树边和横叉边，第二遍删除返祖边。<br>
理解二：可以一遍删除满足 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi><mo>&lt;</mo><mi>v</mi></mrow><annotation encoding="application/x-tex">u &lt; v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span> 的边 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>u</mi><mo separator="true">,</mo><mtext> </mtext><mi>v</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(u,\ v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>，然后删除满足 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi><mo>&gt;</mo><mi>v</mi></mrow><annotation encoding="application/x-tex">u &gt; v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span> 的边。</p>
</blockquote>
<p>问题转换为求最小边与最小环。跑 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 遍单源最短路即可。</p>
<h2 id="code-3">Code</h2>
<pre><code class="language-c++">typedef pair&lt;int, int&gt; pii;

const int MAX_N = 2005, MAX_M = 5005;

struct edge {
	int v, w, nxt;
	edge(int v = 0, int w = 0, int nxt = 0)
	: v(v), w(w), nxt(nxt) {}
} e[MAX_M];

int dist[MAX_N][MAX_N];
int head[MAX_N], tot;
int n, m, c;

void lnk(int u, int v, int w) {
	e[++tot] = edge(v, w, head[u]);
	head[u] = tot;
}

void dij(int s) {
	priority_queue&lt;pii&gt; pq;
	
	int *d = dist[s];
	
	pq.push(pii(d[s] = 0, s));
	while (!pq.empty()) {
		pii top = pq.top(); pq.pop();
		int u = top.second;
		if (d[u] &lt; -top.first) continue;
		for (int i = head[u]; i; i = e[i].nxt) {
			int v = e[i].v, w = e[i].w, t = d[u] + w;
			if (d[v] &gt; t) 
				pq.push(pii(-(d[v] = t), v));
		}
	}
}

int main() {
	scanf(&quot;%d%d%d&quot;, &amp;n, &amp;m, &amp;c);
	for (int i = 1, u, v, w; i &lt;= m; ++i) {
		scanf(&quot;%d%d%d&quot;, &amp;u, &amp;v, &amp;w);
		lnk(u, v, w);
	}
	int ans = 0;
	memset(dist, 0x3f, sizeof(dist));
	for (int s = 1; s &lt;= n; ++s) dij(s);
	for (int u = 1; u &lt; n; ++u)
	for (int v = u + 1; v &lt;= n; ++v) {
		if (dist[u][v] &lt;= c or dist[v][u] &lt;= c) ans = 1;
		if (dist[u][v] + dist[v][u] &lt;= c) {
			ans = 2;
			goto output_part;
		} 
	}
	output_part:
		printf(&quot;%d\n&quot;, ans);
	return 0;
}
</code></pre>
<hr>
<h1 id="div-id-ff-illuminations-2div"><div id = "F">F - Illuminations 2<div></h1>
<hr>
<h1 id="div-id-gg-occupy-the-citiesdiv"><div id = "G">G - Occupy the Cities<div></h1>
<h2 id="solution-4">Solution</h2>
<p>处理出连续的 1 区间之间的距离。并划分 1 区间的属性：单数或者复数。单数的区间一轮只能往左右一个方向扩展，而复数的区间可以同时往两个方向扩展。特殊处理第一轮，之后的所有区间都是复数区间，可以简单计算。</p>
<h2 id="code-4">Code</h2>
<pre><code class="language-c++">const int MAX_N = 1000005;

bool sg[MAX_N];
char s[MAX_N];
int d[MAX_N];
int n;

void chkmx(int &amp;a, const int&amp; b) { if (a &lt; b) a = b; }

int main() {
	int T;
	scanf(&quot;%d&quot;,&amp;T);
	while (T--) {
		
		scanf(&quot;%d%s&quot;, &amp;n, s + 1);
		int m = 0, r = 0; bool g = 0;
		
		for (int l = 1; l &lt;= n; ++l) if (s[l] == '1') {
			
			g |= (d[++m] = l - r - 1);
			
			for(r = l; r &lt; n and s[r + 1] == '1'; ++r);
			sg[m] = (l == r);
			
			l = r;
			
		}
		
		g |= (d[m + 1] = n - r);
		
		if (!g) puts(&quot;0&quot;); else {
			
			d[1] = (d[1] &lt;&lt; 1) - 1;
			d[m + 1] = (d[m + 1] &lt;&lt; 1) - 1;
			for (int i = 1; i &lt;= m; ++i) {
				if (!sg[i]) --d[i], --d[i + 1];
				else (d[i] &gt;= d[i + 1]) ? --d[i] : --d[i + 1];
			}
			
			int ans = 0;
			for (int i = 1; i &lt;= m; ++i) chkmx(ans, (d[i] + 1) &gt;&gt; 1);
			chkmx(ans, (d[m + 1] + 1) &gt;&gt; 1);
			printf(&quot;%d\n&quot;, ans + 1);
			
		}
		
	}
	return 0;
}
</code></pre>
<hr>
<h1 id="div-id-hh-popcount-wordsdiv"><div id = "H">H - Popcount Words<div></h1>
<hr>
<h1 id="div-id-ii-ptsddiv"><div id = "I">I - PTSD<div></h1>
<h2 id="solution-5">Solution</h2>
<p>求最大值，于是优先给值大的元素组队。从后往前贪心求解即可。</p>
<h2 id="code-5">Code</h2>
<pre><code class="language-c++">typedef long long ll;

const int MAX_N = 1000005;

char s[MAX_N];
int n;

int main() {
	int T;
	scanf(&quot;%d&quot;, &amp;T);
	while (T--) {
		scanf(&quot;%d%s&quot;, &amp;n, s + 1);
		ll ans=0;
		for (int i = n, g = 0; i; --i) {
			if (s[i] == '1' and g) --g, ans += i;
			else ++g;
		}
		printf(&quot;%lld\n&quot;,ans);
	}
	return 0;
}
</code></pre>
<hr>
<h1 id="div-id-jj-suffix-automatondiv"><div id = "J">J - Suffix Automaton<div></h1>
<hr>
<h1 id="div-id-kk-taxdiv"><div id = "K">K - Tax<div></h1>
<blockquote>
<p>题意为先满足最短路，再要求花费最小。审题挂掉。🙊</p>
</blockquote>
<h2 id="solution-6">Solution</h2>
<p>根据题意，直接在最短路的基础上进行搜索。</p>
<p>根据幂平均不等式，复杂度在每层点数都相同的分层图时最大，为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>exp</mi><mo>⁡</mo><mo>(</mo><mrow><mi>n</mi><mfrac><mrow><mi>ln</mi><mo>⁡</mo><mi>x</mi></mrow><mi>x</mi></mfrac></mrow><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">O(\exp({n \cfrac{\ln x}{x}}))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.276em;vertical-align:-0.686em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5899999999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span> 。</p>
<p>求导最后可得在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">x = 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span> 时复杂度最大，可以通过题目。</p>
<h2 id="code-6">Code</h2>
<pre><code class="language-c++">const int MAX_N = 55, MAX_M = 1235, MAX_2M = 2505;

struct edge {
	int v, c, nxt;
	edge(int v = 0, int c = 0, int nxt = 0)
	: v(v), c(c), nxt(nxt) {}
} e[MAX_2M];

int tax[MAX_M], cnt[MAX_M];
int d[MAX_N], cost[MAX_N];
int head[MAX_N], tot;
int n, m;

inline void lnk(int u, int v, int c) {
	e[++tot] = edge(v, c, head[u]);
	head[u] = tot;
}

void bfs(int s) {
	queue&lt;int&gt; q;
	d[s] = 1; q.push(s);
	while (!q.empty()) {
		int u = q.front(); q.pop();
		for (int i = head[u]; i; i = e[i].nxt) {
			int v = e[i].v;
			if (!d[v]) { d[v] = d[u] + 1; q.push(v); }
		}
	}
}

void dfs(int u, int g = 0) {
	if (cost[u] &gt; g) cost[u] = g;
	for (int i = head[u]; i; i = e[i].nxt) {
		int v = e[i].v, c = e[i].c;
		if (d[v] != d[u] + 1) continue;
		++cnt[c];
		dfs(v, g + cnt[c] * tax[c]);
		--cnt[c];
	}
}

int main() {
	scanf(&quot;%d%d&quot;, &amp;n, &amp;m);
	for (int i = 1; i &lt;= m; ++i) scanf(&quot;%d&quot;, tax + i);
	for (int i = 1, u, v, c; i &lt;= m; ++i) {
		scanf(&quot;%d%d%d&quot;, &amp;u, &amp;v, &amp;c);
		lnk(u, v, c), lnk(v, u, c);
	}
	memset(cost, 0x3f, sizeof(cost));
	bfs(1);
	dfs(1);
	for (int i = 2; i &lt;= n; ++i) printf(&quot;%d\n&quot;, cost[i]);
	return 0;
}
</code></pre>
<hr>
<h1 id="div-id-ll-wiring-engineeringdiv"><div id = "L">L - Wiring Engineering<div></h1>
]]></content>
    </entry>
</feed>